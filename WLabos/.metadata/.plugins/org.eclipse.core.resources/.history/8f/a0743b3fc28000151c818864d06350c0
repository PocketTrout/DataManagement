package datamanagement.labo1.searching;

import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.util.Comparator;

import org.apache.lucene.analysis.core.WhitespaceAnalyzer;
import org.apache.lucene.analysis.en.EnglishAnalyzer;
import org.apache.lucene.index.DirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.misc.HighFreqTerms;
import org.apache.lucene.misc.TermStats;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;

import datamanagement.labo1.indexing.Lab1Indexer;

public class Main {
	
	public static void main(String[] args) {

		Path indexPath = FileSystems.getDefault().getPath(Lab1Indexer.INDEXDIR);
		try {
			Directory indexDir = FSDirectory.open(indexPath);
			IndexReader iReader = DirectoryReader.open(indexDir);
			HighFreqQuestions(iReader);
			Lab1Searcher searcher = new Lab1Searcher(new WhitespaceAnalyzer(), iReader);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public static void HighFreqQuestions(IndexReader reader)
	{
		try {
			TermStats[] stats = HighFreqTerms.getHighFreqTerms(reader, 10, Lab1Indexer.AUTHORFIELD, new Comparator<TermStats>() {
				
				@Override
				public int compare(TermStats o1, TermStats o2) {
					
					return o1.docFreq - o2.docFreq;
				}
			});
			
			System.out.println("Top des auteurs: ");
			for (TermStats termStats : stats) {
				System.out.println(termStats.termtext.utf8ToString() + "- nombre de publications: " termStats.docFreq);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}

}
