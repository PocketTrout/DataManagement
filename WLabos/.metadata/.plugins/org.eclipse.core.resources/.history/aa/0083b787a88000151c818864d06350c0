package datamanagement.labo1.indexing;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.nio.file.FileSystem;
import java.nio.file.FileSystems;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.nio.file.WatchEvent.Kind;
import java.nio.file.WatchEvent.Modifier;
import java.util.Iterator;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.StringField;
import org.apache.lucene.document.TextField;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.index.IndexWriterConfig.OpenMode;
import org.apache.lucene.search.similarities.DefaultSimilarity;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;

public class Indexer {
	
	private IndexWriter iwriter;
	private String filePath;
	private Analyzer analyzer;
	private DefaultSimilarity similarity;
	private IndexWriterConfig writerConf;
	
    /** Creates a new instance of Indexer */
    public Indexer(Analyzer analyzer, String path) {
    	this.analyzer = analyzer;
    	this.filePath = path;
    	this.similarity = null;
    	createAndConfigureWriter();
    }
    
    public Indexer(Analyzer analyzer, String path, DefaultSimilarity similarity) {
    	this(analyzer,path);
    	this.similarity = similarity;
    	createAndConfigureWriter();
    }
    
    private void createAndConfigureWriter() {
    	IndexWriterConfig indexWriterConf = new IndexWriterConfig(analyzer);
    	indexWriterConf.setOpenMode(OpenMode.CREATE); // always create and replace existing index
    	indexWriterConf.setUseCompoundFile(false);
    	
    	if(null != similarity) indexWriterConf.setSimilarity(similarity);
    	
    	try {
			iwriter = new IndexWriter(FSDirectory.open(FileSystems.getDefault().getPath("dataMgmt/indexes")), indexWriterConf);
		} catch (IOException e) {
			System.out.println(e.getMessage());
		}
    }

    
   
}
